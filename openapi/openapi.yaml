# https://spec.openapis.org/oas/v3.1.0#openapi-object
openapi: 3.1.0
info:
  title: Wolf Personal Website API
  description: This is the API for my personal websites
  version: 0.0.1

servers:
  - url: https://404wolf.com
    description: Personal website production
  - url: https://www.404wolf.com
    description: Personal website production alias

paths:
  /api:
    /about:
      get:
        summary: Get about information
        responses:
          200:
            description: Information about Wolf Mermelstein
            content:
              application/json:
                schema:
                  $ref: "./schemas/about.yaml"
    /contacts:
      get:
        summary: Get a list of contacts
        description:
          Get a list of contacts, only. /about also provides this information,
          and this route will be removed in the future.
        deprecated: true
        responses:
          200:
            description: A list of contacts
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "./schemas/contact.yaml"
    /objects/special:
      get:
        summary: Get a list of object IDs for special s3 objects
        description: Get a list of special object IDs that get used in special
          ways on the website
        responses:
          200:
            description: The special object id aliases and their object IDs
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    basicAbout:
                      type: string
                    extendedAbout:
                      type: string
                    resume:
                      type: string
    /objects:
      get:
        summary: Get a specific text S3 object
        parameters:
          - name: encoding
            in: header
            required: false
            schema:
              type: string
            description: The encoding of the object. Default is UTF-8.
          - name: object
            in: header
            required: true
            schema:
              type: string
            description: The name of the object to retrieve.
        responses:
          200:
            description: The string object requested
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: string
                      description: The object requested
          404:
            description: The object requested was not found
      post:
        summary: Create a new text S3 object
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    description: The name of the object to create
                  data:
                    description: The data to store in the object
                    type: string
                  dataType:
                    description: The type of data to store in the object.
                    type: string
                    enum:
                      - str
                      - b64

        responses:
          200:
            description: The object was created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      type: string
                      description: The data stored in the object
          400:
            summary: The object could not be created
            description: Invalid datatype or no data provided
    /posts:
      get:
        summary: Get a list of all posts
        responses:
          200:
            description: A list of posts
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "./schemas/post.yaml"
    /posts/{postId}:
      description: CRUD endpoint for manipulating Posts
      get:
        summary: Get a specific post
        parameters:
          - name: postId
            in: path
            required: true
            schema:
              type: string
            description: The ID of the post to retrieve, make, update, or delete
        responses:
          200:
            description: The post requested
            content:
              application/json:
                schema:
                  object:
                    properties:
                      data:
                        schema:
                          $ref: "./schemas/post.yaml"
          404:
            description: The post requested was not found
      post:
        summary: Create a new post
        requestBody:
          required: true
          content:
            application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  uniqueItems: true
                title:
                  type: string
                description:
                  type: string
                  nullable: true
                markdown:
                  description: The ID of the resource file for markdown
                  type: string
                  nullable: true
                covers:
                  description: The `id`s of the resources to use for the cover images of the post.
                  type: array
                  items:
                    type: string
                type:
                  type: string
                  enum:
                    - blog
                    - project
                date:
                  type: string
                  nullable: true
                tags:
                  type: array
                  items:
                    type: string
                notes:
                  type: string
                  nullable: true
        responses:
          500:
            description: The post could not be created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      summary: The error message
                      type: string
          200:
            description: The post was created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "./schemas/post.yaml"
          404:
            description: The post could not be created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      summary: The error message
                      type: string
      put:
        summary: Update a post
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "./schemas/post.yaml"
        responses:
          200:
            description: The post was updated successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "./schemas/post.yaml"
          404:
            summary: Could not locate post
            description: The post requested was not found
    /resources{resourceId}:
      get:
        summary: Get a specific resource
        parameters:
          - name: resourceId
            in: path
            required: true
            schema:
              type: string
            description: The ID of the resource to retrieve
        responses:
          200:
            description: The resource requested
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "./schemas/resource.yaml"
          404:
            description: The resource requested was not found
      post:
        summary: Create a new resource
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    uniqueItems: true
                  title:
                    type: string
                  filename:
                    type: string
                    uniqueItems: true
                  url:
                    type: string
                    uniqueItems: true
                  type:
                    type: string
                  postId:
                    type: string
                    nullable: true
                  description:
                    type: string
                    nullable: true
                  post:
                    $ref: "./schemas/post.yaml"
        responses:
          200:
            description: The resource was created successfully
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    data:
                      $ref: "./schemas/resource.yaml"
          404:
            description: The resource could not be created
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      summary: The error message
                      type: string
          409:
            description: The resource already exists
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    message:
                      summary: The error message
                      type: string
        delete:
          summary: Delete a resource
          parameters:
            - name: resourceId
              in: path
              required: true
              schema:
                type: string
              description: The ID of the resource to delete
          responses:
            200:
              description: The resource was deleted successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "./schemas/resource.yaml"
            404:
              description: The resource requested was not found
        put:
          summary: Update a resource
          description:
            Update a resource. Changing the ID or the actual resource conotents
            is currently not possible.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: "./schemas/resource.yaml"
          responses:
            200:
              description: The resource was updated successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      data:
                        $ref: "./schemas/resource.yaml"
            404:
              description: The resource requested was not found
      /resume:
        summary: Update the resume
        post:
          200:
            description: Get a link to update the resume
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    link:
                      schema:
                        type: string
